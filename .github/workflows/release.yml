name: Publish

on:
  push:
    tags:        
      - '*'

jobs:
  build:
    name: Publish binaries
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x.x
    - name: Download Dalamud
      run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev\"
    - name: Build
      run: dotnet publish -p:Version=${{ github.ref_name }}
    - name: zip up
      run: Compress-Archive -Path PortraitPlogon/bin/x64/Release/publish/* -DestinationPath portrait-plogon.zip
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Portrait Plogon ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./portrait-plogon.zip
        asset_name: portrait-plogon.zip
        asset_content_type: application/zip
    - name: Write out repo.json
      run: |
        $ver = '${{ github.ref_name }}'
        $path = './repo.json'
        $json = Get-Content -Raw $path | ConvertFrom-Json
        $json[0].AssemblyVersion = $ver
        $json[0].DownloadLinkInstall = $json.DownloadLinkInstall -replace '[^/]+/portrait-plogon.zip',"$ver/portrait-plogon.zip"
        $json[0].DownloadLinkUpdate = $json.DownloadLinkUpdate -replace '[^/]+/portrait-plogon.zip',"$ver/portrait-plogon.zip"
        $content = $json | ConvertTo-Json -AsArray
        set-content -Path $path -Value $content

    - name: Commit repo.json
      run: |
        git config --global user.name "Actions User"
        git config --global user.email "actions@github.com"
        git fetch origin main
        git branch -f master ${{ github.sha }}
        git checkout main
        git add repo.json
        git commit -m "[CI] Updating repo.json for ${{ github.ref_name }}" || true
        git push origin main
